`#!/usr/bin/env node`

optimist = require "optimist"
    .usage "Transform a pwilang formatted file or stdin to HTML/XML\nUsage: $0 [options] file\n       $0 [options]"
    .boolean [\help, \inline, \jinja, \j, \i]

    .alias do
        help: \h
        inline: \i
        jinja: \j

    .describe do
        help: "Show this help"
        inline: "Suppress the indentation in the output file"
        jinja: "Activate the jinja mode"

argv = optimist.argv

fs = require "fs"
sys = require "sys"
grammar = require "./grammar"

if argv.help
    console.log optimist.help()
    process.exit 0

if argv._.length >= 1
    for file of argv._
        (err, data) <- fs.readFile file, 'utf-8', ...
        if err
            console.warn err.message
        else
            res = grammar.parse data, inline: argv.inline, jinja: argv.jinja
            sys.print res
else
    process.stdin.resume()
    process.stdin.setEncoding "utf-8"

    # Read our file from stdin
    data = ""
    process.stdin.on "data", (chunk) ->
        data += chunk

    # When read, process it.
    <- process.stdin.on "end"
    sys.print grammar.parse data, inline: argv.inline, jinja: argv.jinja

